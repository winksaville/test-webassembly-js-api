0000000: 0061 736d             ; WASM_BINARY_MAGIC
0000004: 0100 0000             ; WASM_BINARY_VERSION
 - section: Type [0x01]
0000008: 01                    ; section code
0000009: 19                    ; section size
0000009: 60                    ; func sig 0
000000a: 01                    ; num params
000000b: 7f                    ; I32
000000c: 01                    ; num results
000000d: 7f                    ; I32
000000e: 60                    ; func sig 1
000000f: 01                    ; num params
0000010: 7f                    ; I32
0000012: 60                    ; func sig 2
0000013: 00                    ; num params
0000014: 01                    ; num results
0000015: 7f                    ; I32
0000016: 60                    ; func sig 3
0000017: 02                    ; num params
0000018: 7f                    ; I32
0000019: 7f                    ; I32
000001b: 60                    ; func sig 4
000001c: 02                    ; num params
000001d: 7f                    ; I32
000001e: 7f                    ; I32
000001f: 01                    ; num results
0000020: 7f                    ; I32
 - section: Function [0x03]
0000023: 03                    ; section code
0000024: 0f                    ; section size
0000023: 0e                    ; num functions
0000024: 00                    ; func 0 sig malloc
0000025: 01                    ; func 1 sig free
0000026: 00                    ; func 2 sig getFreeChunk
0000027: 00                    ; func 3 sig findChunk
0000028: 02                    ; func 4 sig getHeapPtr
0000029: 02                    ; func 5 sig getFreeMemory
000002a: 02                    ; func 6 sig getOriginalHeapPtr
000002b: 00                    ; func 7 sig nextFree
000002c: 03                    ; func 8 sig setHeadSize
000002d: 03                    ; func 9 sig setFoot
000002e: 01                    ; func 10 sig setInuse
000002f: 01                    ; func 11 sig clearInuse
0000030: 00                    ; func 12 sig getChunkSize
0000031: 04                    ; func 13 sig addTwo1
 - section: Memory [0x05]
0000034: 05                    ; section code
0000035: 03                    ; section size
0000034: 01                    ; num memories
0000035: 00                    ; memory flags
0000036: 01                    ; memory initial pages
 - section: Export [0x07]
0000039: 07                    ; section code
000003a: 56                    ; section size
0000039: 06                    ; num exports
000003a: 06                    ; export name length
000003e: memory // export name
0000041: 00                    ; export kind
0000042: 00                    ; export memory index
0000043: 06                    ; export name length
0000047: malloc // export name
000004a: 00                    ; export kind
000004b: 00                    ; export func index
000004c: 04                    ; export name length
0000050: free // export name
0000051: 00                    ; export kind
0000052: 01                    ; export func index
0000053: 0a                    ; export name length
0000057: getHeapPtr // export name
000005e: 00                    ; export kind
000005f: 04                    ; export func index
0000060: 0d                    ; export name length
0000064: getFreeMemory // export name
000006e: 00                    ; export kind
000006f: 05                    ; export func index
0000070: 12                    ; export name length
0000074: getOriginalHeapPtr // export name
0000083: 00                    ; export kind
0000084: 06                    ; export func index
0000085: 07                    ; export name length
0000089: addTwo1 // export name
000008d: 00                    ; export kind
000008e: 0d                    ; export func index
 - section: Code [0x0a]
0000091: 0a                    ; section code
0000092: e0                    ; section size
0000091: 0e                    ; num functions
 - func body 0 (malloc)
0000094: ac                    ; func body size
0000092: 06                    ; local var count
0000093: 01                    ; local index
0000094: 7f                    ; I32
0000095: 01                    ; local index
0000096: 7f                    ; I32
0000097: 01                    ; local index
0000098: 7f                    ; I32
0000099: 01                    ; local index
000009a: 7f                    ; I32
000009b: 01                    ; local index
000009c: 7f                    ; I32
000009d: 01                    ; local index
000009e: 7f                    ; I32
000009f: 41                    ; i32.const
00000a0: 08                    ; i32 literal
00000a1: 21                    ; set_local
00000a2: 01                    ; local index
00000a3: 20                    ; get_local
00000a4: 00                    ; local index
00000a5: 20                    ; get_local
00000a6: 01                    ; local index
00000a7: 41                    ; i32.const
00000a8: 01                    ; i32 literal
00000a9: 6b                    ; i32.sub
00000aa: 6a                    ; i32.add
00000ab: 41                    ; i32.const
00000ac: -1                    ; i32 literal
00000ad: 20                    ; get_local
00000ae: 01                    ; local index
00000af: 41                    ; i32.const
00000b0: 01                    ; i32 literal
00000b1: 6b                    ; i32.sub
00000b2: 73                    ; i32.xor
00000b3: 71                    ; i32.and
00000b4: 21                    ; set_local
00000b5: 00                    ; local index
00000b6: 20                    ; get_local
00000b7: 00                    ; local index
00000b8: 41                    ; i32.const
00000b9: 08                    ; i32 literal
00000ba: 6a                    ; i32.add
00000bb: 21                    ; set_local
00000bc: 02                    ; local index
00000bd: 20                    ; get_local
00000be: 02                    ; local index
00000bf: 10                    ; call
00000c0: 02                    ; call func index (2)
00000c1: 21                    ; set_local
00000c2: 03                    ; local index
00000c3: 20                    ; get_local
00000c4: 03                    ; local index
00000c5: 41                    ; i32.const
00000c6: 00                    ; i32 literal
00000c7: 4a                    ; i32.gt_s
00000c8: 04                    ; if
0000037: 40                    ; block_type
00000ca: 02                    ; block
00000cb: 40                    ; block_type
00000cc: 20                    ; get_local
00000cd: 03                    ; local index
00000ce: 0f                    ; return
00000cf: 0b                    ; end
00000d0: 0b                    ; end
00000d1: 41                    ; i32.const
00000d2: 00                    ; i32 literal
00000d3: 28                    ; i32.load
00000d4: 02                    ; alignment
00000d5: 10                    ; load offset
00000d6: 21                    ; set_local
00000d7: 04                    ; local index
00000d8: 20                    ; get_local
00000d9: 04                    ; local index
00000da: 41                    ; i32.const
00000db: 07                    ; i32 literal
00000dc: 6a                    ; i32.add
00000dd: 21                    ; set_local
00000de: 04                    ; local index
00000df: 20                    ; get_local
00000e0: 04                    ; local index
00000e1: 41                    ; i32.const
00000e2: -8                    ; i32 literal
00000e3: 71                    ; i32.and
00000e4: 21                    ; set_local
00000e5: 04                    ; local index
00000e6: 20                    ; get_local
00000e7: 04                    ; local index
00000e8: 20                    ; get_local
00000e9: 02                    ; local index
00000ea: 6a                    ; i32.add
00000eb: 21                    ; set_local
00000ec: 05                    ; local index
00000ed: 20                    ; get_local
00000ee: 04                    ; local index
00000ef: 41                    ; i32.const
00000f0: 04                    ; i32 literal
00000f1: 6a                    ; i32.add
00000f2: 21                    ; set_local
00000f3: 06                    ; local index
00000f4: 20                    ; get_local
00000f5: 06                    ; local index
00000f6: 20                    ; get_local
00000f7: 02                    ; local index
00000f8: 10                    ; call
00000f9: 08                    ; call func index (8)
00000fa: 20                    ; get_local
00000fb: 06                    ; local index
00000fc: 41                    ; i32.const
00000fd: 04                    ; i32 literal
00000fe: 6a                    ; i32.add
00000ff: 10                    ; call
0000100: 0a                    ; call func index (10)
0000101: 20                    ; get_local
0000102: 06                    ; local index
0000103: 20                    ; get_local
0000104: 02                    ; local index
0000105: 10                    ; call
0000106: 09                    ; call func index (9)
0000107: 41                    ; i32.const
0000108: 00                    ; i32 literal
0000109: 20                    ; get_local
000010a: 05                    ; local index
000010b: 41                    ; i32.const
000010c: 04                    ; i32 literal
000010d: 6a                    ; i32.add
000010e: 36                    ; i32.store
000010f: 02                    ; alignment
0000110: 10                    ; load offset
0000111: 20                    ; get_local
0000112: 04                    ; local index
0000113: 41                    ; i32.const
0000114: 08                    ; i32 literal
0000115: 6a                    ; i32.add
0000116: 21                    ; set_local
0000117: 04                    ; local index
0000118: 20                    ; get_local
0000119: 04                    ; local index
000011a: 21                    ; set_local
000011b: 06                    ; local index
000011c: 02                    ; block
000008b: 40                    ; block_type
000011e: 03                    ; loop
000008d: 40                    ; block_type
0000120: 20                    ; get_local
0000121: 06                    ; local index
0000122: 20                    ; get_local
0000123: 05                    ; local index
0000124: 48                    ; i32.lt_s
0000125: 45                    ; i32.eqz
0000126: 0d                    ; br_if
0000128: 20                    ; get_local
0000129: 06                    ; local index
000012a: 41                    ; i32.const
000012b: 00                    ; i32 literal
000012c: 36                    ; i32.store
000012d: 02                    ; alignment
000012e: 00                    ; load offset
000012f: 20                    ; get_local
0000130: 06                    ; local index
0000131: 41                    ; i32.const
0000132: 04                    ; i32 literal
0000133: 6a                    ; i32.add
0000134: 21                    ; set_local
0000135: 06                    ; local index
0000136: 0c                    ; br
0000138: 0b                    ; end
0000139: 0b                    ; end
000013a: 20                    ; get_local
000013b: 04                    ; local index
000013c: 0f                    ; return
000013d: 0b                    ; end
 - func body 1 (free)
0000142: 8d                    ; func body size
0000140: 02                    ; local var count
0000141: 01                    ; local index
0000142: 7f                    ; I32
0000143: 01                    ; local index
0000144: 7f                    ; I32
0000145: 41                    ; i32.const
0000146: 00                    ; i32 literal
0000147: 21                    ; set_local
0000148: 01                    ; local index
0000149: 41                    ; i32.const
000014a: 00                    ; i32 literal
000014b: 21                    ; set_local
000014c: 02                    ; local index
000014d: 20                    ; get_local
000014e: 00                    ; local index
000014f: 10                    ; call
0000150: 0b                    ; call func index (11)
0000151: 41                    ; i32.const
0000152: 00                    ; i32 literal
0000153: 28                    ; i32.load
0000154: 02                    ; alignment
0000155: 1c                    ; load offset
0000156: 41                    ; i32.const
0000157: 00                    ; i32 literal
0000158: 46                    ; i32.eq
0000159: 04                    ; if
000001a: 40                    ; block_type
000015b: 02                    ; block
000015c: 40                    ; block_type
000015d: 41                    ; i32.const
000015e: 00                    ; i32 literal
000015f: 20                    ; get_local
0000160: 00                    ; local index
0000161: 36                    ; i32.store
0000162: 02                    ; alignment
0000163: 1c                    ; load offset
0000164: 0b                    ; end
0000165: 0b                    ; end
0000166: 41                    ; i32.const
0000167: 00                    ; i32 literal
0000168: 28                    ; i32.load
0000169: 02                    ; alignment
000016a: 14                    ; load offset
000016b: 21                    ; set_local
000016c: 02                    ; local index
000016d: 20                    ; get_local
000016e: 02                    ; local index
000016f: 20                    ; get_local
0000170: 00                    ; local index
0000171: 10                    ; call
0000172: 0c                    ; call func index (12)
0000173: 6a                    ; i32.add
0000174: 21                    ; set_local
0000175: 02                    ; local index
0000176: 41                    ; i32.const
0000177: 00                    ; i32 literal
0000178: 20                    ; get_local
0000179: 02                    ; local index
000017a: 36                    ; i32.store
000017b: 02                    ; alignment
000017c: 14                    ; load offset
000017d: 20                    ; get_local
000017e: 00                    ; local index
000017f: 41                    ; i32.const
0000180: 04                    ; i32 literal
0000181: 6a                    ; i32.add
0000182: 21                    ; set_local
0000183: 01                    ; local index
0000184: 41                    ; i32.const
0000185: 00                    ; i32 literal
0000186: 28                    ; i32.load
0000187: 02                    ; alignment
0000188: 20                    ; load offset
0000189: 41                    ; i32.const
000018a: 00                    ; i32 literal
000018b: 4a                    ; i32.gt_s
000018c: 04                    ; if
000004d: 40                    ; block_type
000018e: 02                    ; block
000018f: 40                    ; block_type
0000190: 20                    ; get_local
0000191: 01                    ; local index
0000192: 41                    ; i32.const
0000193: 00                    ; i32 literal
0000194: 28                    ; i32.load
0000195: 02                    ; alignment
0000196: 20                    ; load offset
0000197: 36                    ; i32.store
0000198: 02                    ; alignment
0000199: 00                    ; load offset
000019a: 41                    ; i32.const
000019b: 00                    ; i32 literal
000019c: 28                    ; i32.load
000019d: 02                    ; alignment
000019e: 20                    ; load offset
000019f: 20                    ; get_local
00001a0: 00                    ; local index
00001a1: 36                    ; i32.store
00001a2: 02                    ; alignment
00001a3: 00                    ; load offset
00001a4: 0b                    ; end
00001a5: 05                    ; else
00001a6: 02                    ; block
00001a7: 40                    ; block_type
00001a8: 20                    ; get_local
00001a9: 01                    ; local index
00001aa: 41                    ; i32.const
00001ab: 00                    ; i32 literal
00001ac: 36                    ; i32.store
00001ad: 02                    ; alignment
00001ae: 00                    ; load offset
00001af: 0b                    ; end
00001b0: 0b                    ; end
00001b1: 20                    ; get_local
00001b2: 00                    ; local index
00001b3: 41                    ; i32.const
00001b4: 00                    ; i32 literal
00001b5: 36                    ; i32.store
00001b6: 02                    ; alignment
00001b7: 00                    ; load offset
00001b8: 41                    ; i32.const
00001b9: 00                    ; i32 literal
00001ba: 20                    ; get_local
00001bb: 00                    ; local index
00001bc: 36                    ; i32.store
00001bd: 02                    ; alignment
00001be: 20                    ; load offset
00001bf: 41                    ; i32.const
00001c0: 00                    ; i32 literal
00001c1: 41                    ; i32.const
00001c2: 00                    ; i32 literal
00001c3: 28                    ; i32.load
00001c4: 02                    ; alignment
00001c5: 18                    ; load offset
00001c6: 41                    ; i32.const
00001c7: 01                    ; i32 literal
00001c8: 6a                    ; i32.add
00001c9: 36                    ; i32.store
00001ca: 02                    ; alignment
00001cb: 18                    ; load offset
00001cc: 0b                    ; end
 - func body 2 (getFreeChunk)
00001d1: a5                    ; func body size
00001cf: 05                    ; local var count
00001d0: 01                    ; local index
00001d1: 7f                    ; I32
00001d2: 01                    ; local index
00001d3: 7f                    ; I32
00001d4: 01                    ; local index
00001d5: 7f                    ; I32
00001d6: 01                    ; local index
00001d7: 7f                    ; I32
00001d8: 01                    ; local index
00001d9: 7f                    ; I32
00001da: 41                    ; i32.const
00001db: 00                    ; i32 literal
00001dc: 21                    ; set_local
00001dd: 01                    ; local index
00001de: 41                    ; i32.const
00001df: 00                    ; i32 literal
00001e0: 21                    ; set_local
00001e1: 02                    ; local index
00001e2: 41                    ; i32.const
00001e3: 00                    ; i32 literal
00001e4: 21                    ; set_local
00001e5: 03                    ; local index
00001e6: 41                    ; i32.const
00001e7: 00                    ; i32 literal
00001e8: 21                    ; set_local
00001e9: 04                    ; local index
00001ea: 41                    ; i32.const
00001eb: 00                    ; i32 literal
00001ec: 21                    ; set_local
00001ed: 05                    ; local index
00001ee: 41                    ; i32.const
00001ef: 00                    ; i32 literal
00001f0: 28                    ; i32.load
00001f1: 02                    ; alignment
00001f2: 1c                    ; load offset
00001f3: 21                    ; set_local
00001f4: 02                    ; local index
00001f5: 41                    ; i32.const
00001f6: 00                    ; i32 literal
00001f7: 28                    ; i32.load
00001f8: 02                    ; alignment
00001f9: 20                    ; load offset
00001fa: 21                    ; set_local
00001fb: 03                    ; local index
00001fc: 41                    ; i32.const
00001fd: 00                    ; i32 literal
00001fe: 28                    ; i32.load
00001ff: 02                    ; alignment
0000200: 14                    ; load offset
0000201: 21                    ; set_local
0000202: 04                    ; local index
0000203: 41                    ; i32.const
0000204: 00                    ; i32 literal
0000205: 28                    ; i32.load
0000206: 02                    ; alignment
0000207: 18                    ; load offset
0000208: 41                    ; i32.const
0000209: 00                    ; i32 literal
000020a: 4a                    ; i32.gt_s
000020b: 04                    ; if
000003d: 40                    ; block_type
000020d: 02                    ; block
000020e: 40                    ; block_type
000020f: 20                    ; get_local
0000210: 00                    ; local index
0000211: 10                    ; call
0000212: 03                    ; call func index (3)
0000213: 21                    ; set_local
0000214: 01                    ; local index
0000215: 20                    ; get_local
0000216: 01                    ; local index
0000217: 41                    ; i32.const
0000218: 00                    ; i32 literal
0000219: 4a                    ; i32.gt_s
000021a: 04                    ; if
000004c: 40                    ; block_type
000021c: 02                    ; block
000021d: 40                    ; block_type
000021e: 20                    ; get_local
000021f: 01                    ; local index
0000220: 20                    ; get_local
0000221: 02                    ; local index
0000222: 46                    ; i32.eq
0000223: 04                    ; if
0000055: 40                    ; block_type
0000225: 02                    ; block
0000226: 40                    ; block_type
0000227: 41                    ; i32.const
0000228: 00                    ; i32 literal
0000229: 20                    ; get_local
000022a: 01                    ; local index
000022b: 10                    ; call
000022c: 07                    ; call func index (7)
000022d: 36                    ; i32.store
000022e: 02                    ; alignment
000022f: 1c                    ; load offset
0000230: 0b                    ; end
0000231: 0b                    ; end
0000232: 20                    ; get_local
0000233: 01                    ; local index
0000234: 20                    ; get_local
0000235: 03                    ; local index
0000236: 46                    ; i32.eq
0000237: 04                    ; if
0000069: 40                    ; block_type
0000239: 02                    ; block
000023a: 40                    ; block_type
000023b: 41                    ; i32.const
000023c: 00                    ; i32 literal
000023d: 41                    ; i32.const
000023e: 00                    ; i32 literal
000023f: 36                    ; i32.store
0000240: 02                    ; alignment
0000241: 20                    ; load offset
0000242: 0b                    ; end
0000243: 0b                    ; end
0000244: 41                    ; i32.const
0000245: 00                    ; i32 literal
0000246: 41                    ; i32.const
0000247: 00                    ; i32 literal
0000248: 28                    ; i32.load
0000249: 02                    ; alignment
000024a: 18                    ; load offset
000024b: 41                    ; i32.const
000024c: 01                    ; i32 literal
000024d: 6b                    ; i32.sub
000024e: 36                    ; i32.store
000024f: 02                    ; alignment
0000250: 18                    ; load offset
0000251: 20                    ; get_local
0000252: 01                    ; local index
0000253: 10                    ; call
0000254: 0a                    ; call func index (10)
0000255: 20                    ; get_local
0000256: 01                    ; local index
0000257: 10                    ; call
0000258: 0c                    ; call func index (12)
0000259: 21                    ; set_local
000025a: 05                    ; local index
000025b: 20                    ; get_local
000025c: 04                    ; local index
000025d: 20                    ; get_local
000025e: 05                    ; local index
000025f: 6b                    ; i32.sub
0000260: 21                    ; set_local
0000261: 04                    ; local index
0000262: 41                    ; i32.const
0000263: 00                    ; i32 literal
0000264: 20                    ; get_local
0000265: 04                    ; local index
0000266: 36                    ; i32.store
0000267: 02                    ; alignment
0000268: 14                    ; load offset
0000269: 20                    ; get_local
000026a: 01                    ; local index
000026b: 0f                    ; return
000026c: 0b                    ; end
000026d: 0b                    ; end
000026e: 0b                    ; end
000026f: 0b                    ; end
0000270: 41                    ; i32.const
0000271: 00                    ; i32 literal
0000272: 0f                    ; return
0000273: 0b                    ; end
 - func body 3 (findChunk)
0000277: 43                    ; func body size
0000276: 02                    ; local var count
0000277: 01                    ; local index
0000278: 7f                    ; I32
0000279: 01                    ; local index
000027a: 7f                    ; I32
000027b: 41                    ; i32.const
000027c: 00                    ; i32 literal
000027d: 21                    ; set_local
000027e: 01                    ; local index
000027f: 41                    ; i32.const
0000280: 00                    ; i32 literal
0000281: 21                    ; set_local
0000282: 02                    ; local index
0000283: 41                    ; i32.const
0000284: 00                    ; i32 literal
0000285: 28                    ; i32.load
0000286: 02                    ; alignment
0000287: 1c                    ; load offset
0000288: 21                    ; set_local
0000289: 01                    ; local index
000028a: 02                    ; block
0000015: 40                    ; block_type
000028c: 03                    ; loop
0000017: 40                    ; block_type
000028e: 20                    ; get_local
000028f: 01                    ; local index
0000290: 41                    ; i32.const
0000291: 00                    ; i32 literal
0000292: 47                    ; i32.ne
0000293: 45                    ; i32.eqz
0000294: 0d                    ; br_if
0000296: 20                    ; get_local
0000297: 01                    ; local index
0000298: 10                    ; call
0000299: 0c                    ; call func index (12)
000029a: 21                    ; set_local
000029b: 02                    ; local index
000029c: 20                    ; get_local
000029d: 02                    ; local index
000029e: 20                    ; get_local
000029f: 00                    ; local index
00002a0: 46                    ; i32.eq
00002a1: 04                    ; if
000002c: 40                    ; block_type
00002a3: 02                    ; block
00002a4: 40                    ; block_type
00002a5: 20                    ; get_local
00002a6: 01                    ; local index
00002a7: 0f                    ; return
00002a8: 0b                    ; end
00002a9: 0b                    ; end
00002aa: 20                    ; get_local
00002ab: 01                    ; local index
00002ac: 28                    ; i32.load
00002ad: 02                    ; alignment
00002ae: 00                    ; load offset
00002af: 21                    ; set_local
00002b0: 01                    ; local index
00002b1: 0c                    ; br
00002b3: 0b                    ; end
00002b4: 0b                    ; end
00002b5: 41                    ; i32.const
00002b6: 00                    ; i32 literal
00002b7: 0f                    ; return
00002b8: 0b                    ; end
 - func body 4 (getHeapPtr)
00002bb: 08                    ; func body size
00002ba: 00                    ; local var count
00002bb: 41                    ; i32.const
00002bc: 00                    ; i32 literal
00002bd: 28                    ; i32.load
00002be: 02                    ; alignment
00002bf: 10                    ; load offset
00002c0: 0f                    ; return
00002c1: 0b                    ; end
 - func body 5 (getFreeMemory)
00002c4: 08                    ; func body size
00002c3: 00                    ; local var count
00002c4: 41                    ; i32.const
00002c5: 00                    ; i32 literal
00002c6: 28                    ; i32.load
00002c7: 02                    ; alignment
00002c8: 14                    ; load offset
00002c9: 0f                    ; return
00002ca: 0b                    ; end
 - func body 6 (getOriginalHeapPtr)
00002cd: 08                    ; func body size
00002cc: 00                    ; local var count
00002cd: 41                    ; i32.const
00002ce: 00                    ; i32 literal
00002cf: 28                    ; i32.load
00002d0: 02                    ; alignment
00002d1: 0c                    ; load offset
00002d2: 0f                    ; return
00002d3: 0b                    ; end
 - func body 7 (nextFree)
00002d6: 08                    ; func body size
00002d5: 00                    ; local var count
00002d6: 20                    ; get_local
00002d7: 00                    ; local index
00002d8: 28                    ; i32.load
00002d9: 02                    ; alignment
00002da: 00                    ; load offset
00002db: 0f                    ; return
00002dc: 0b                    ; end
 - func body 8 (setHeadSize)
00002df: 12                    ; func body size
00002de: 00                    ; local var count
00002df: 20                    ; get_local
00002e0: 00                    ; local index
00002e1: 20                    ; get_local
00002e2: 00                    ; local index
00002e3: 28                    ; i32.load
00002e4: 02                    ; alignment
00002e5: 00                    ; load offset
00002e6: 41                    ; i32.const
00002e7: 07                    ; i32 literal
00002e8: 71                    ; i32.and
00002e9: 20                    ; get_local
00002ea: 01                    ; local index
00002eb: 72                    ; i32.or
00002ec: 36                    ; i32.store
00002ed: 02                    ; alignment
00002ee: 00                    ; load offset
00002ef: 0b                    ; end
 - func body 9 (setFoot)
00002f2: 23                    ; func body size
00002f1: 02                    ; local var count
00002f2: 01                    ; local index
00002f3: 7f                    ; I32
00002f4: 01                    ; local index
00002f5: 7f                    ; I32
00002f6: 41                    ; i32.const
00002f7: 00                    ; i32 literal
00002f8: 21                    ; set_local
00002f9: 02                    ; local index
00002fa: 41                    ; i32.const
00002fb: 00                    ; i32 literal
00002fc: 21                    ; set_local
00002fd: 03                    ; local index
00002fe: 20                    ; get_local
00002ff: 00                    ; local index
0000300: 28                    ; i32.load
0000301: 02                    ; alignment
0000302: 00                    ; load offset
0000303: 21                    ; set_local
0000304: 03                    ; local index
0000305: 20                    ; get_local
0000306: 00                    ; local index
0000307: 20                    ; get_local
0000308: 03                    ; local index
0000309: 6a                    ; i32.add
000030a: 21                    ; set_local
000030b: 02                    ; local index
000030c: 20                    ; get_local
000030d: 02                    ; local index
000030e: 20                    ; get_local
000030f: 01                    ; local index
0000310: 36                    ; i32.store
0000311: 02                    ; alignment
0000312: 00                    ; load offset
0000313: 0b                    ; end
 - func body 10 (setInuse)
0000316: 1c                    ; func body size
0000315: 01                    ; local var count
0000316: 01                    ; local index
0000317: 7f                    ; I32
0000318: 41                    ; i32.const
0000319: 00                    ; i32 literal
000031a: 21                    ; set_local
000031b: 01                    ; local index
000031c: 20                    ; get_local
000031d: 00                    ; local index
000031e: 41                    ; i32.const
000031f: 04                    ; i32 literal
0000320: 6b                    ; i32.sub
0000321: 21                    ; set_local
0000322: 01                    ; local index
0000323: 20                    ; get_local
0000324: 01                    ; local index
0000325: 20                    ; get_local
0000326: 01                    ; local index
0000327: 28                    ; i32.load
0000328: 02                    ; alignment
0000329: 00                    ; load offset
000032a: 41                    ; i32.const
000032b: 01                    ; i32 literal
000032c: 72                    ; i32.or
000032d: 36                    ; i32.store
000032e: 02                    ; alignment
000032f: 00                    ; load offset
0000330: 0b                    ; end
 - func body 11 (clearInuse)
0000333: 1c                    ; func body size
0000332: 01                    ; local var count
0000333: 01                    ; local index
0000334: 7f                    ; I32
0000335: 41                    ; i32.const
0000336: 00                    ; i32 literal
0000337: 21                    ; set_local
0000338: 01                    ; local index
0000339: 20                    ; get_local
000033a: 00                    ; local index
000033b: 41                    ; i32.const
000033c: 04                    ; i32 literal
000033d: 6b                    ; i32.sub
000033e: 21                    ; set_local
000033f: 01                    ; local index
0000340: 20                    ; get_local
0000341: 01                    ; local index
0000342: 20                    ; get_local
0000343: 01                    ; local index
0000344: 28                    ; i32.load
0000345: 02                    ; alignment
0000346: 00                    ; load offset
0000347: 41                    ; i32.const
0000348: -2                    ; i32 literal
0000349: 71                    ; i32.and
000034a: 36                    ; i32.store
000034b: 02                    ; alignment
000034c: 00                    ; load offset
000034d: 0b                    ; end
 - func body 12 (getChunkSize)
0000350: 18                    ; func body size
000034f: 01                    ; local var count
0000350: 01                    ; local index
0000351: 7f                    ; I32
0000352: 41                    ; i32.const
0000353: 00                    ; i32 literal
0000354: 21                    ; set_local
0000355: 01                    ; local index
0000356: 20                    ; get_local
0000357: 00                    ; local index
0000358: 41                    ; i32.const
0000359: 04                    ; i32 literal
000035a: 6b                    ; i32.sub
000035b: 21                    ; set_local
000035c: 01                    ; local index
000035d: 20                    ; get_local
000035e: 01                    ; local index
000035f: 28                    ; i32.load
0000360: 02                    ; alignment
0000361: 00                    ; load offset
0000362: 41                    ; i32.const
0000363: -2                    ; i32 literal
0000364: 71                    ; i32.and
0000365: 0f                    ; return
0000366: 0b                    ; end
 - func body 13 (addTwo1)
0000369: 08                    ; func body size
0000368: 00                    ; local var count
0000369: 20                    ; get_local
000036a: 00                    ; local index
000036b: 20                    ; get_local
000036c: 01                    ; local index
000036d: 6a                    ; i32.add
000036e: 0f                    ; return
000036f: 0b                    ; end
 - section: Data [0x0b]
0000374: 0b                    ; section code
0000375: 26                    ; section size
0000374: 01                    ; num data segments
 - data segment header 0
0000375: 00                    ; memory index
0000376: 41                    ; i32.const
0000377: 08                    ; i32 literal
0000378: 0b                    ; end
0000379: 20                    ; data segment size
 - data segment data 0
000037b: db 0f 49 40 28 00 00 00 28 00 00 00 00 00 00 00
000038b: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
